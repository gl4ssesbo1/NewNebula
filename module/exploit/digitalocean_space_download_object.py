from termcolor import colored
import os

author = {
    "name":"gl4ssesbo1",
    "twitter":"https://twitter.com/gl4ssesbo1",
    "github":"https://github.com/gl4ssesbo1",
    "blog":"https://www.pepperclipp.com/"
}

needs_creds = True

variables = {
	"SERVICE": {
		"value": "SPACE",
		"required": "true",
        "description":"The service that will be used to run the module. It cannot be changed."
	},
    "BUCKET":{
		"value":"",
		"required":"true",
        "description":"The service that will be used to run the module. It cannot be changed."
	},
    "KEY":{
		"value":"",
		"required":"true",
        "description":"The service that will be used to run the module. It cannot be changed."
	},
	"DOWNLOAD":{
		"value":"",
		"required":"true",
        "description":"The service that will be used to run the module. It cannot be changed."
	},
	"VERSION-ID":{
		"value":"",
		"required":"false",
        "description":"The version ID in case it is deleted"
	}
}

description = "Gets the name of a bucket or a list of buckets separated by comma (',') and a key file, key with wildcard ('*', 'key*', '*key' or 'k*y') and downloads that/those file/s. Files can also be some, separated by commas. Requires Secret Key and Access Key of an IAM that has access to it."

aws_command = ""

def exploit(profile):
	bucket = variables['BUCKET']['value']
	download = variables["DOWNLOAD"]["value"]
	key = variables["KEY"]["value"]
	versionid = variables["VERSION-ID"]["value"]

	try:
		if versionid == "" or versionid == None:
			profile.download_file(bucket, key, download)
		else:
			profile.download_file(bucket, key, download, ExtraArgs={'VersionId': versionid})

		return {
			"Bucket": {
				"Bucket": bucket,
				"message": "File '{}' downloaded on '{}'.".format(key, download)
			}
		}, 200
	except:
		return {"error": "File does not exist"}, 500