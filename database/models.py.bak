from .db import db
from flask_bcrypt import generate_password_hash, check_password_hash
import datetime

class UserTasks(db.Document):
    task_date_time = db.DateTimeField()
    task_user = db.StringField()
    task_process = db.StringField()


class AWSComponents(db.Document):
    aws_region = db.StringField()
    aws_user_agent = db.StringField()


class Cosmonaut(db.Document):
    cosmonaut_name = db.StringField(required=True, unique=True)
    cosmonaut_pass = db.StringField(required=True)

    def hash_password(self):
        self.cosmonaut_pass = generate_password_hash(self.cosmonaut_pass).decode('utf8')

    def check_password(self, password):
        return check_password_hash(self.cosmonaut_pass, password)


class AWSCredentials(db.Document):
    aws_profile_name = db.StringField(required=True, unique=True)
    aws_access_key = db.StringField(required=True)
    aws_secret_key = db.StringField()
    aws_session_token = db.StringField()
    aws_region = db.StringField()

class DigitalOceanCredentials(db.Document):
    digitalocean_profile_name = db.StringField(required=True, unique=True)
    digitalocean_access_key = db.StringField()
    digitalocean_secret_key = db.StringField()
    digitalocean_token = db.StringField()
    digitalocean_region = db.StringField()


class AZURECredentials(db.Document):
    azure_creds_id = db.StringField(required=True, unique=True)
    azure_user_id = db.StringField()
    azure_creds_scope = db.ListField()
    azure_user_principal_name = db.StringField()
    azure_access_token = db.StringField()
    azure_id_token = db.StringField()
    azure_refresh_token = db.StringField()
    azure_expiration_date = db.DateTimeField(default=datetime.datetime.utcnow)
    azure_expires_in = db.IntField()
    azure_tenant_id = db.StringField()
    azure_user_name = db.StringField()
    azure_resource = db.StringField()

class AWSUsers(db.Document):
    aws_username = db.StringField(required=True, unique=True)
    aws_user_arn = db.StringField(required=True, unique=True)
    aws_user_id = db.StringField(required=True, unique=True)
    aws_user_path = db.StringField()
    aws_user_create_date = db.DateTimeField()
    aws_account_id = db.StringField()
    aws_user_access_to_login_profile = db.BooleanField()
    aws_user_attached_policies = db.ListField()
    aws_group_policies = db.ListField()
    aws_group_attached_policies = db.ListField()
    aws_user_policies = db.ListField()
    aws_user_groups = db.ListField()
    aws_user_password_last_used = db.DateTimeField()
    aws_user_permission_boundary = db.DictField()
    aws_access_key_last_used = db.DictField()
    aws_user_tags = db.ListField()


class AWSGroups(db.Document):
    aws_groupname = db.StringField(required=True, unique=True)
    aws_group_arn = db.StringField(required=True, unique=True)
    aws_group_id = db.StringField(required=True, unique=True)
    aws_group_path = db.StringField(required=True, unique=True)
    aws_group_create_date = db.DateTimeField()
    aws_group_attached_policies = db.ListField()
    aws_group_users = db.ListField()
    aws_group_policies = db.ListField()
    aws_group_tags = db.ListField()


class AWSRoles(db.Document):
    aws_rolename = db.StringField(required=True, unique=True)
    aws_role_arn = db.StringField(required=True, unique=True)
    aws_role_id = db.StringField(required=True, unique=True)
    aws_role_description = db.StringField()
    aws_role_create_date = db.StringField()
    aws_role_last_usage_date = db.DateTimeField()
    aws_role_last_usage_region = db.StringField()
    aws_role_assume_role_policy = db.StringField()
    aws_role_max_session_duration = db.IntField()
    aws_role_attached_policies = db.ListField()
    aws_role_policies = db.ListField()
    aws_role_tags = db.ListField()


class AWSInstances(db.Document):
    aws_instance_id = db.StringField(required=True, unique=True)
    aws_group_id = db.StringField()
    aws_owner_id = db.StringField()
    aws_instance_type = db.StringField()
    aws_instance_kernel_id = db.StringField()
    aws_instance_key_name = db.StringField()
    aws_instance_launch_rime = db.DateTimeField()
    aws_instance_monitoring_state = db.StringField()
    aws_instance_platform = db.StringField()
    aws_instance_private_dns_name = db.StringField()
    aws_instance_public_dns_name = db.StringField()
    aws_instance_private_ip_address = db.StringField()
    aws_instance_public_ip_address = db.StringField()
    aws_instance_ramdisk_id = db.StringField()
    aws_instance_state = db.StringField()
    aws_instance_placement = db.DictField()
    aws_instance_product_codes = db.ListField()
    aws_instance_state_transition_reason = db.StringField()
    aws_instance_subnet_id = db.StringField()
    aws_instance_vpc_id = db.StringField()
    aws_instance_architecture = db.StringField()
    aws_instance_block_device_mappings = db.ListField()
    aws_instance_client_group = db.StringField()
    aws_instance_ebs_optimized = db.StringField()
    aws_instance_ena_support = db.StringField()
    aws_instance_hypervisor = db.StringField()
    aws_instance_iam_instance_profile = db.DictField()
    aws_instance_lifecycle = db.StringField()
    aws_instance_elastic_gpu_associations = db.ListField()
    aws_instance_elastic_inference_accelerator_associations = db.ListField()
    aws_instance_network_interfaces = db.ListField()
    aws_instance_outpost_arn = db.StringField()
    aws_instance_root_device_name = db.StringField()
    aws_instance_security_groups = db.ListField()
    aws_instance_source_dest_check = db.BooleanField()
    aws_instance_spot_instance_request_id = db.BooleanField()
    aws_instance_sriov_net_support = db.BooleanField()
    aws_instance_state_reason = db.DictField()
    aws_instance_cpu_options = db.DictField()
    aws_instance_capacity_reservation_id = db.StringField()
    aws_instance_capacity_reservation_specification = db.DictField()
    aws_instance_hibernation_options = db.DictField()
    aws_instance_licenses = db.ListField()
    aws_instance_metadata_options = db.DictField()
    aws_instance_boot_mode = db.StringField()
    aws_instance_platform_details = db.StringField()
    aws_instance_usage_operation = db.StringField()
    aws_instance_usage_operation_update_time = db.DateTimeField()
    aws_instance_tags = db.ListField()


class AWSS3Bucket(db.Document):
    aws_s3_bucket_name = db.StringField(required=True, unique=True)
    aws_s3_bucket_owner = db.StringField()
    aws_s3_creation_date = db.DateTimeField()
    aws_s3_bucket_objects = db.DictField()
    aws_s3_deleted_objects = db.DictField()
    aws_s3_bucket_policy = db.DictField()
    aws_s3_bucket_policy_status = db.StringField()
    aws_s3_bucket_acl = db.DictField()
    aws_s3_is_website = db.BooleanField()

class DigitalOceanSpace(db.Document):
    digitalocean_s3_space_name = db.StringField(required=True, unique=True)
    digitalocean_s3_space_owner = db.StringField()
    digitalocean_s3_creation_date = db.DateTimeField()
    digitalocean_s3_space_objects = db.DictField()
    digitalocean_s3_deleted_objects = db.DictField()
    digitalocean_s3_space_policy = db.DictField()
    digitalocean_s3_space_policy_status = db.StringField()
    digitalocean_s3_space_acl = db.DictField()
    digitalocean_s3_is_website = db.BooleanField()

class GCPBucket(db.Document):
    gcp_bucket_name = db.StringField(required=True, unique=True)
    gcp_bucket_owner = db.StringField()
    gcp_bucket_objects = db.DictField()
    gcp_bucket_policy = db.DictField()
    gcp_bucket_policy_status = db.StringField()
    gcp_bucket_acl = db.DictField()

class AzureServices(db.Document):
    azure_services_base_name = db.StringField(required=True, unique=True)
    azure_services_dns_list = db.DictField()

"""class AzureADUsage(db.Document):
    domain_name = db.StringField(required=True, unique=True)
    usage = db.StringField()
    federation_brandname = db.StringField()
    cloud_instance_name = db.StringField()
    cloud_instance_issuer_uri = db.StringField()
    tenant_id = db.StringField()
    auth_url = db.StringField()"""


class Domains(db.Document):
    dn_name = db.StringField(required=True, unique=True)
    service = db.StringField()
    azureUsage = db.DictField()
    subdomains = db.ListField()
    domain_ips = db.ListField()
    federation_brandname = db.StringField()
    cloud_instance_name = db.StringField()
    cloud_instance_issuer_uri = db.StringField()
    tenant_id = db.StringField()
    auth_url = db.StringField()

class AzureUsers(db.Document):
    azure_user_email = db.StringField(required=True, unique=True)
    azure_user_domain = db.StringField()
    azure_user_has_password = db.BooleanField()
    azure_user_password = db.StringField()
    azure_user_mfa_enabled = db.BooleanField()
    azure_user_password_expired = db.BooleanField()
    azure_user_locked = db.BooleanField()
    azure_user_disabled = db.BooleanField()

class AWSSupportCases(db.Document):
    aws_support_case_id = db.StringField(required=True, unique=True)
    aws_support_display_id = db.StringField()
    aws_support_subject = db.StringField()
    aws_support_status = db.StringField()
    aws_support_service_Code = db.StringField()
    aws_support_categoryCode = db.StringField()
    aws_support_severityCode = db.StringField()
    aws_support_submittedBy = db.StringField()
    aws_support_timeCreated = db.StringField()
    aws_support_recent_communications = db.DictField()
    aws_support_language = db.StringField()
    aws_support_cc_email_addresses = db.ListField()
